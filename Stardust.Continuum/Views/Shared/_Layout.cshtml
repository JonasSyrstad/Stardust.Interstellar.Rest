<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title - Continuum</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <!-- Part 1: Wrap all page content here -->
    <div id="wrap">

        <!-- Fixed navbar -->
        <div class="navbar navbar-fixed-top navbar-inverse">
            <div class="navbar-inner">
                <div class="container" style="margin-left: 0px; padding-left: 10px;">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <a href="@Url.Action("Index", "Home", null, Request.Url.Scheme)" class="navbar-brand text-nowrap">
                        <div><img src="@Url.Content("~/Assets/logo_white.svg")" alt="Brand" style="height:30px; margin-top: -5px;text-align: center; text-align-all: center; padding-top: -20px; text-wrap: none;display:inline-block; " /> <span class="hidden-sm hidden-xs" style="color: white">Continuum</span></div>
                    </a>

                    <div class="navbar-collapse collapse">
                        <ul class="nav navbar-nav">
                            <li class="hidden-md hidden-sm hidden-xs"><a href="https://github.com/JonasSyrstad/Stardust.Interstellar.Rest/blob/master/Stardust.Interstellar.Rest/continuum.md">The Continuum Project</a></li>
                            <li>

                                <div id="throughPutText" class="div-inline hidden-sm hidden-xs hidden-md" style="padding-top: 20px;line-height: 20px; padding-right: 5px; width: 100px;" data-toggle="tooltip" data-placement="bottom-left" data-placement='top-right'>Throughput </div>
                                <div id="throughPutLabel" class="div-inline hidden-sm hidden-xs hidden-md pull-right" style="text-align: right;padding-top: 20px;line-height: 20px; width: 70px; margin-left: 10px;" data-toggle="tooltip" data-placement="bottom-left" data-placement='top-right'>m/sec</div>
                                

                            </li><li><div class="div-inline" style="padding-top: 12.5px;line-height: 20px;">
    <div id="smallGraph" class="demo-placeholder div-inline" style="vert-align: middle;height: 30px; width: 250px; "></div>
</div></li>
                            
                            <li>@Html.ActionLink("API", "", "Swagger", new { area = "" }, null)</li>
                            <li>@Html.ActionLink("About", "About", "Home", new { area = "" }, null)</li>
                        </ul>

                    </div>
                </div>
            </div>
        </div>

        <!-- Begin page content -->
        <div id="main" class="container body-content" style="width: 100%;">
            @RenderBody()
        </div>
    </div>

    <div class="hidden-md hidden-sm hidden-xs" style="transform: rotate(-90deg);transform-origin: left top 0; color: lightsteelblue; left: 2px; bottom: 0px; position: absolute;">
        @*<div class="container hidden-md hidden-sm hidden-xs" style="color: azure;">*@
        &copy; @DateTime.Now.Year - Stardust
        @*</div>*@
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
    <script language="javascript">
        $(function () {
            var spin = "|/-\\";
            var spinnChar = 0;
            var plotIndex2 = {};
            var plotdata2 = [];
            var hub2 = $.connection.updateFeed;
            var options2 = {
                bars: {
                    show: true,
                    zero: true,
                    steps: false,
                    lineWidth: 1

                },
                points: {
                    show: false
                },
                xaxis: {
                    tickDecimals: 0,
                    tickSize: 1,
                    show: false

                },
                yaxis: {
                    min: 0,
                    show: false
                },
                legend: {
                    position: "nw",
                    backgroundOpacity: 0.7,
                    show: false,
                    noColumns: 3
                },
                grid: {
                    borderWidth: 1,
                    borderColor: "rgb(40, 40, 40)",
                    backgroundColor: { colors: ["#111", "#333"] }
                }
            };
            var isAsterix = true;
            hub2.client.usageUpdate = function (series) {
                try {
                    if ($.processNewEvents !== null)
                        $.processNewEvents(series);
                }
                catch (e) { }
                spinnChar = spinnChar == spin.length - 1 ? 0 : ++spinnChar;
                $("#throughPutText").text("Throughput  " + spin[spinnChar]);
                isAsterix = !isAsterix;
                $.each(series,
                    function (index, data) {
                        if (data.Name !== "Total") {
                        } else {
                            var label = data.Name + ": " + data.Location;

                            if (plotIndex2[label] == null) {

                                plotIndex2[label] = { index: plotdata2.length, added: true }

                                var color = "rgb(50, 255, 50)";
                                if (data.Location === "Errors")
                                    color = "rgb(255, 50, 50)";
                                plotdata2[plotIndex2[label].index] = { label: label, data: [], color: color };
                                for (var i = 0; i < 60; i++) {
                                    plotdata2[plotIndex2[label].index].data.push([i, 0]);
                                }
                            }
                            if (plotdata2[plotIndex2[label].index].data.length > 60)
                                plotdata2[plotIndex2[label].index].data.shift();
                            plotdata2[plotIndex2[label].index].data.push([0, data.ItemsReceived]);
                            $.each(plotdata2[plotIndex2[label].index].data, function (id, d) { d[0] = id });
                            $.plot("#smallGraph", plotdata2, options2);
                            if (data.Location !== "Errors")
                                $('#throughPutLabel').text(data.ItemsReceived.toString() + "m/sec");
                        }
                    });
            }
            $.connection.hub.reconnected(function () {
                hub2.server.connect("Connected to log stream", $('#selected').text());
            });
            // Kick off the connection.
            $.connection.hub.start().done(function () {
                console.log("connected statistics");
                hub2.server.connect("Connected to log stream", selected);
                $.plot("#smallGraph", plotdata2, options2);
            });

        });
    </script>
</body>
</html>
