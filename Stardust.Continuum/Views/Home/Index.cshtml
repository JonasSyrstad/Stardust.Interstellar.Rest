<div id="header" class="">
    <div class="dropdown div-inline">
        <button class="btn btn-sm  btn-primary dropdown-toggle" type="button" data-toggle="dropdown">
            <i class="glyphicon glyphicon-tags"></i>&nbsp; <span class="hidden-md hidden-sm hidden-xs">Source:</span><span id="label"></span>
            <span class="caret"></span>
        </button>
        <ul class="dropdown-menu">
            @foreach (var i in ViewBag.Sources)
            {
                <li><a href="#">@i</a></li>
            }
        </ul>
    </div>
    <div class="btn btn-sm btn-danger div-inline" id="clearFeed" title="Clear feed"><i class="glyphicon glyphicon-remove"></i></div>
    <div class="btn btn-sm btn-info div-inline hidden" id="pause" title="Pause feed"><i class="glyphicon glyphicon-pause"></i></div>
    <div class="btn btn-sm btn-info div-inline hidden" id="start" title="Resume feed"><i class="glyphicon glyphicon-play"></i></div>
    <input type="hidden" id="selected" />
    <input type="hidden" id="state" />
    <div class="div-inline">&nbsp;</div>
    <div class="inner-addon left-addon div-inline form-group-sm">
        <i title="filter" class="glyphicon glyphicon-filter ">&nbsp;&nbsp;</i>
        <input style="display: inline-block; padding-left: 30px; width: 200px; padding-right: 10px; " type="text" class="form-control " id="filterBox" />
    </div><div class="btn btn-sm div-inline btn-default" id="filter"><i class="glyphicon glyphicon-filter"></i></div>
    <input type="hidden" id="filterString" />
    <div class="info help-block" id="filterhelp" style="font-size: 10px;">Filter: </div>
</div>

<hr style="margin-top: 5px; margin-bottom: 10px;" />
<div id="container" style="width: 100%; height: 100%;font-family: monospace;" class="pre-scrollable">
    <div class='itemContainer'>
        <div class="truncate" style="width: 100%">
            <span style="font-weight: bolder">Select a stream....</span>
        </div>
    </div>

</div>

@section scripts
{
    <script src="@Url.Content("~/scripts/jquery.signalR-2.2.1.js")" type="text/javascript"></script>

    <script src="@Url.Content("~/signalr/hubs")"></script>
    <script language="javascript">
        $(function () {
            $("#start").addClass('hidden');
            $("#pause").addClass('hidden');
            var hub = $.connection.updateFeed;
            $("#clearFeed").click(function () {
                $("#container").empty();
                $("#container").append("<div class=\"itemContainer\"></div>");
            });
            $("#pause").click(function () {
                if ($("#state").text() !== "running") {
                    return;
                }
                $("#state").text("stopped");
                $("#pause").addClass('hidden');
                $("#start").removeClass('hidden');
                $.connection.hub.stop();

            });
            $("#filter").click(function () {
                $("#filterString").text($("#filterBox").val());
                if ($("#filterBox").val() !== "")
                    $("#filterhelp").text("Filter: " + $("#filterBox").val());
                else {
                    $("#filterhelp").text("Filter: ");
                }
            });
            $("#start").click(function () {

                if ($("#state").text() === "running") {

                    return;
                }
                $.connection.hub.stop();
                hub.client.cmessage = function (data) {
                    // Container for newItem
                    AppendData(data);
                }
                hub.client.cmessages = function (data) {
                    // Container for newItem'
                    //debugger;
                    $.each(data,
                        function (i, d) {
                            AppendData(d);
                        });
                }
                // Kick off the connection.
                $.connection.hub.stop();
                $.connection.hub.start().done(function () {
                    //hub.server.subcribe()
                    hub.server.connect("Connected to log stream", $('#selected').text());
                    $("#state").text("running");
                    $("#start").addClass('hidden');
                    $("#pause").removeClass('hidden');
                });
                $.connection.hub.reconnected(function () {
                    hub.server.connect("Connected to log stream", $('#selected').text());
                });

            });
            //$("#clearFeed").click(function () { });
            $(".dropdown-menu li a").click(function () {

                var selected = $(this).text();


                if (selected === "-Select source-" || selected === $('#selected').text()) return;
                //$(".btn:first-child").text("Sources: " + $(this).text());
                $("#label").text(" " + $(this).text());
                $(".btn:first-child").val($(this).text());
                $('#selected').text(selected);
                // Establish a connection to the updateFeed hub


                hub.client.cmessage = function (data) {
                    // Container for newItem
                    AppendData(data);
                }
                hub.client.cmessages = function (data) {
                    // Container for newItem'
                    //debugger;
                    $.each(data,
                        function (i, d) {
                            AppendData(d);
                        });
                }
                // Kick off the connection.
                $.connection.hub.stop();
                $.connection.hub.start().done(function () {
                    //hub.server.subcribe()
                    console.log("connected statistics");
                    hub.server.connect("Connected to log stream", selected);
                    $("#state").text("running");
                    $("#start").addClass('hidden');
                    $("#pause").removeClass('hidden');
                });

            });

        });
        function AppendData(data) {
            var getStackTrace = function (data1) {
                if (data1.StackTrace === "") return "";
                return "<div class='" +
                    errorBox +
                    "'>" + data1.Message + "<br/>" +

                    stackTraceHeader +
                    data.StackTrace +
                    "<div>";
            };
            var convertUTCDateToLocalDate = function (d) {
                var date = new Date(d.toString());

                return date.toLocaleString();
            }
            var getFromProperties = function (data2) {
                if (data2.Properties == null) return "";
                var info = "";
                if (data2.Properties.MachineName != null)
                    info += "\n" + data2.Properties.MachineName;
                if (data2.Properties.SourceAddress != null)
                    info += "\n" + data2.Properties.SourceAddress;
                return info;
            };
            if ($("#filterString").text() !== null && $("#filterString").text() !== "")
                if ($("#filterString").text() !== data.UserName && $("#filterString").text() !== data.CorrelationToken) return;
            var blankDiv = $("<div class='itemContainer'></div>");
            var errorBox = "alert alert-danger";
            var errorStyle = "style='color:red;font-weight: bold;'";

            var lineIcon = "<span class='my-tool-tip' data-toggle='tooltip' data-placement='top-right' title='" + convertUTCDateToLocalDate(data.Timestamp) + getFromProperties(data) + "'><i class='glyphicon glyphicon-info-sign'> </i></span>";
            var stackTraceHeader = "";
            if (data.StackTrace == null) {
                data.StackTrace = "";
                errorBox = "hidden";
                errorStyle = "";
            } else {
                stackTraceHeader = "StackTrace:<br/>";
                lineIcon = "<span class='my-tool-tip' data-toggle='tooltip' data-placement='top-right' title='" + convertUTCDateToLocalDate(data.Timestamp) + getFromProperties(data) + "'><i class='glyphicon glyphicon-warning-sign'> </i></span>";
            }
            if (data.CorrelationToken == null)
                data.CorrelationToken = "";
            if (data.UserName == null)
                data.UserName = "";
            var prefix = "";
            if ($('#selected').text() === "All" && data.Environment != null)
                prefix = "[" + data.Environment + "] ";
            // Holds the update
            var newItem = $("<div class='info'><span class='truncate'" + errorStyle + ">" +
                lineIcon
                +
                prefix +
                data.ServiceName +
                "&gt; [" +
                data.UserName +
                "] (" +
                data.CorrelationToken +
                "): " +
                data.Message +
                "</span></div>" +
                getStackTrace(data));

            // Hide our blank div (that will contain the new update), and our new item itself.
            // The blank div will slide down, and our newItem will fade into existence.
            blankDiv.hide();
            newItem.hide();

            // Insert the update at the top of the list, as it's sorted in descending order by publish date.
            $("div#container div:first").before(blankDiv);
            blankDiv.html(newItem);

            // Slide down the blank div (it has a fixed height in CSS), and then fade the new update in.
            blankDiv.slideDown(0,
                null,
                function () {
                    newItem.fadeIn(0);
                    if ($("div#container").children().length > 20000) {
                        try {
                            $("div#container div:last").remove();
                        } catch (e) {
                            console.log(e.message);
                        }
                    }

                }
            );
            $("span.my-tool-tip").tooltip();
        }
    </script>
}