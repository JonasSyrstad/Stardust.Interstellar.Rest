<div id="header" class="">
    <div class="dropdown div-inline">
        <button class="btn btn-sm  btn-primary dropdown-toggle" type="button" data-toggle="dropdown">
            <i class="glyphicon glyphicon-tags"></i>&nbsp; <span class="hidden-md hidden-sm hidden-xs">Source:</span><span id="label"></span>
            <span class="caret"></span>
        </button>
        <ul class="dropdown-menu">
            @foreach (var i in ViewBag.Sources)
            {
                <li><a href="#">@i</a></li>
            }
        </ul>
    </div>
    <div class="btn btn-sm btn-danger div-inline" id="clearFeed" title="Clear feed (Alt + C)"><i class="glyphicon glyphicon-remove"></i></div>
    <div class="btn btn-sm btn-info div-inline hidden" id="pause" title="Pause feed (Alt + P)"><i class="glyphicon glyphicon-pause"></i></div>
    <div class="btn btn-sm btn-info div-inline hidden" id="start" title="Resume feed (Alt + P)"><i class="glyphicon glyphicon-play"></i></div>
    <div class="div-inline hidden-xs hidden-sm">&nbsp;</div>
    <div class="btn btn-sm btn-info div-inline hidden-xs hidden-sm" id="fullscreen" title="Full screen (Alt + F)"><i class="glyphicon glyphicon-fullscreen"></i></div>
    <input type="hidden" id="selected" />
    <input type="hidden" id="state" />
    <div class="div-inline">&nbsp;</div>
    <div class="inner-addon left-addon div-inline form-group-sm">
        <i title="filter" class="glyphicon glyphicon-filter ">&nbsp;&nbsp;</i>
        <input style="display: inline-block; padding-left: 30px; width: 200px; padding-right: 10px; " type="text" class="form-control " id="filterBox" />
    </div><div class="btn btn-sm div-inline btn-default" id="filter"><i class="glyphicon glyphicon-filter"></i></div>
    <div class="btn btn-sm div-inline btn-default hidden-xs hidden-sm" id="clearFilter"><i class="glyphicon glyphicon-remove-sign"></i></div>
    <input type="hidden" id="filterString" />
    <div class="info help-block" id="filterhelp" style="font-size: 10px;">Filter: </div>
</div>

<hr style="margin-top: 5px; margin-bottom: 10px;" />
<div id="container" style="width: 100%; height: 100%;font-family: monospace; background-color: black; background-image: url('/assets/logo_darkGray.svg');background-repeat: no-repeat; background-size: 40%; background-position: center; " class="pre-scrollable">
    <div class='itemContainer'>
        <div class="truncate" style="width: 100%">
            <span style="font-weight: bolder">Select a stream....</span>
        </div>
    </div>

</div>

@section scripts
{
    <script src="@Url.Content("~/scripts/jquery.signalR-2.2.1.js")" type="text/javascript"></script>

    <script src="@Url.Content("~/signalr/hubs")"></script>
    <script language="javascript">
        $(function () {
            var isMobile = false; //initiate as false
            // device detection
            if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)
                || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(navigator.userAgent.substr(0, 4))) isMobile = true;
            $.maxElements = 2000;
            if (isMobile) {
                maxElements = 300;
                console.log("Mobile");
            }
            else
                console.log("PC");
            $("#start").addClass('hidden');
            $("#pause").addClass('hidden');
            var hub = $.connection.updateFeed;
            $("#clearFeed").click(function () {
                cleanStream();
            });
            var pause = function () {
                if ($("#state").text() !== "running") {
                    return;
                }
                $("#state").text("stopped");
                $("#pause").addClass('hidden');
                $("#start").removeClass('hidden');
                $.connection.hub.stop();
            };
            var resume = function () {
                if ($("#state").text() === "running") {

                    return;
                }
                $.connection.hub.stop();
                hub.client.cmessage = function (data) {
                    // Container for newItem
                    AppendData(data);
                }
                hub.client.cmessages = function (data) {
                    // Container for newItem'
                    //debugger;
                    $.each(data,
                        function (i, d) {
                            AppendData(d);
                        });
                }
                // Kick off the connection.
                $.connection.hub.stop();
                $.connection.hub.start().done(function () {
                    //hub.server.subcribe()
                    hub.server.connect("Connected to log stream", $('#selected').text());
                    $("#state").text("running");
                    $("#start").addClass('hidden');
                    $("#pause").removeClass('hidden');
                });
                $.connection.hub.reconnected(function () {
                    hub.server.connect("Connected to log stream", $('#selected').text());
                });
            };
            document.onkeydown = function (e) {

                if (e.altKey && e.keyCode === 67) {
                    cleanStream();
                }
                else if (e.altKey && e.keyCode === 70) {
                    if (e.preventDefault) {
                        e.preventDefault();
                        e.stopPropagation();
                    }

                    $("#container").toggleFullScreen();
                }
                else if (e.altKey && e.keyCode === 80) {
                    if (e.preventDefault) {
                        e.preventDefault();
                        e.stopPropagation();
                    }
                    if ($("#state").text() === "running") pause();
                    else resume();

                }
            };
            function cleanStream() {
                $("#container").empty();
                $("#container").append("<div class=\"itemContainer\"></div>");
            }
            
            $("#pause").click(function () {
                
                pause();

            });
            $("#filter").click(function () {
                $("#filterString").text($("#filterBox").val());
                if ($("#filterBox").val() !== "")
                    $("#filterhelp").text("Filter: " + $("#filterBox").val());
                else {
                    $("#filterhelp").text("Filter: ");
                }
            });
            $("#clearFilter").click(function () {
                $("#filterBox").val("");
                $("#filterString").text($("#filterBox").val());
                if ($("#filterBox").val() !== "")
                    $("#filterhelp").text("Filter: " + $("#filterBox").val());
                else {
                    $("#filterhelp").text("Filter: ");
                }
            });
            $("#fullscreen").click(function () {
                $("#container").fullScreen(true);
            });
            
            $("#start").click(function () {
                
                resume();

            });
            //$("#clearFeed").click(function () { });
            $(".dropdown-menu li a").click(function () {

                var selected = $(this).text();


                if (selected === "-Select source-" || selected === $('#selected').text()) return;
                //$(".btn:first-child").text("Sources: " + $(this).text());
                $("#label").text(" " + $(this).text());
                $(".btn:first-child").val($(this).text());
                $('#selected').text(selected);
                // Establish a connection to the updateFeed hub


                hub.client.cmessage = function (data) {
                    // Container for newItem
                    AppendData(data);
                }
                hub.client.cmessages = function (data) {
                    // Container for newItem'
                    //debugger;
                    $.each(data,
                        function (i, d) {
                            AppendData(d);
                        });
                }
                // Kick off the connection.
                $.connection.hub.stop();
                $.connection.hub.start().done(function () {
                    //hub.server.subcribe()
                    console.log("connected statistics");
                    hub.server.connect("Connected to log stream", selected);
                    $("#state").text("running");
                    $("#start").addClass('hidden');
                    $("#pause").removeClass('hidden');
                });

            });

        });
        function AppendData(data) {
            if ($("#filterString").text() !== null && $("#filterString").text() !== "")
                if ($("#filterString").text() !== data.UserName && $("#filterString").text() !== data.CorrelationToken) return;
            var getStackTrace = function (data1) {
                if (data1.StackTrace === "") return "";
                return "<div class='" +
                    errorBox +
                    "'>" + data1.Message + "<br/>" +

                    stackTraceHeader +
                    data.StackTrace +
                    "<div>";
            };
            var convertUTCDateToLocalDate = function (d) {
                var date = new Date(d.toString());

                return date.toLocaleString();
            }
            var getFromProperties = function (data2) {
                if (data2.Properties == null) return "";
                var info = "";
                if (data2.Properties.MachineName != null)
                    info += "\n" + data2.Properties.MachineName;
                if (data2.Properties.SourceAddress != null)
                    info += "\n" + data2.Properties.SourceAddress;
                return info;
            };

            var errorBox = "alert alert-danger";
            var errorStyle = "style='color:red;font-weight: bold;'";

            var lineIcon = "<span class='my-tool-tip' data-toggle='tooltip' data-placement='top-right' title='" + convertUTCDateToLocalDate(data.Timestamp) + getFromProperties(data) + "'><i class='glyphicon glyphicon-info-sign'> </i></span>";
            var stackTraceHeader = "";
            if (data.StackTrace == null) {
                data.StackTrace = "";
                errorBox = "hidden";
                errorStyle = "";
            } else {
                stackTraceHeader = "StackTrace:<br/>";
                lineIcon = "<span class='my-tool-tip' data-toggle='tooltip' data-placement='top-right' title='" + convertUTCDateToLocalDate(data.Timestamp) + getFromProperties(data) + "'><i class='glyphicon glyphicon-warning-sign'> </i></span>";
            }
            if (data.CorrelationToken == null)
                data.CorrelationToken = "";
            if (data.UserName == null)
                data.UserName = "";
            var prefix = "";
            if ($('#selected').text() === "All" && data.Environment != null)
                prefix = "[" + data.Environment + "] ";
            // Holds the update
            var newItem = $("<div class=\"itemContainer\"><div class='info'><span class='truncate'" + errorStyle + ">" +
                lineIcon
                +
                prefix +
                data.ServiceName +
                "&gt; [" +
                data.UserName +
                "] (" +
                data.CorrelationToken +
                "): " +
                data.Message +
                "</span></div>" +
                getStackTrace(data) + "</div>");
            $("div#container").prepend(newItem);
            $("span.my-tool-tip").tooltip();
            if ($("#container").children().size() > $.maxElements)
                $("div#container").children().last().remove();
        }
        /*
 jquery.fullscreen 1.1.5
 https://github.com/kayahr/jquery-fullscreen-plugin
 Copyright (C) 2012-2013 Klaus Reimer <k@ailis.de>
 Licensed under the MIT license
 (See http://www.opensource.org/licenses/mit-license)
*/
        function d(c) {
            var b, a; if (!this.length) return this; b = this[0]; b.ownerDocument ? a = b.ownerDocument : (a = b, b = a.documentElement); if (null == c) { if (!a.exitFullscreen && !a.webkitExitFullscreen && !a.webkitCancelFullScreen && !a.msExitFullscreen && !a.mozCancelFullScreen) return null; c = !!a.fullscreenElement || !!a.msFullscreenElement || !!a.webkitIsFullScreen || !!a.mozFullScreen; return !c ? c : a.fullscreenElement || a.webkitFullscreenElement || a.webkitCurrentFullScreenElement || a.msFullscreenElement || a.mozFullScreenElement || c } c ? (c =
            b.requestFullscreen || b.webkitRequestFullscreen || b.webkitRequestFullScreen || b.msRequestFullscreen || b.mozRequestFullScreen) && c.call(b) : (c = a.exitFullscreen || a.webkitExitFullscreen || a.webkitCancelFullScreen || a.msExitFullscreen || a.mozCancelFullScreen) && c.call(a); return this
        } jQuery.fn.fullScreen = d; jQuery.fn.toggleFullScreen = function () { return d.call(this, !d.call(this)) }; var e, f, g; e = document;
        e.webkitCancelFullScreen ? (f = "webkitfullscreenchange", g = "webkitfullscreenerror") : e.msExitFullscreen ? (f = "MSFullscreenChange", g = "MSFullscreenError") : e.mozCancelFullScreen ? (f = "mozfullscreenchange", g = "mozfullscreenerror") : (f = "fullscreenchange", g = "fullscreenerror"); jQuery(document).bind(f, function () { jQuery(document).trigger(new jQuery.Event("fullscreenchange")) }); jQuery(document).bind(g, function () { jQuery(document).trigger(new jQuery.Event("fullscreenerror")) });
    </script>
}